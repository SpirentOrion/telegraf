syntax = "proto2";

package result;

message CpuLoad {
  required uint64 utmost = 1;
  required uint64 target = 2;
  required uint64 actual = 3;
  required uint64 system = 4;
  required uint64 user   = 5;
  required uint64 steal  = 6;
}

message IOStats {
  required uint64 ops_target   = 1;
  required uint64 ops_actual   = 2;
  required uint64 bytes_target = 3;
  required uint64 bytes_actual = 4;
  required uint64 errors       = 5;
  required uint64 latency      = 6;
  optional uint64 latency_min  = 7;
  optional uint64 latency_max  = 8;
}

message IOLoad {
  required IOStats Read = 1;
  required IOStats Write = 2;
}

message Multimap {
  required string key    = 1;
  repeated string values = 2;
}

message Update {
  enum UpdateType {
    CPU     = 0;
    BLOCK   = 1;
    MEMORY  = 2;
    NETWORK = 3;
  }
  optional string uuid       = 1;    // provides identity of sender
  required double timestamp  = 2;    // unix timestamp, e.g. seconds since Jan 1, 1970 UTC
  required uint64 sequence   = 3;    // sequence number for this update type
  required UpdateType type   = 4;    // type of update; indicates whether CpuLoad
                                     // or IOLoad message is present
  optional CpuLoad cpu       = 5;    // only present for CPU results
  optional IOLoad io         = 6;    // only present for BLOCK, MEMORY, or NETWORK results

  repeated Multimap     tags = 102;  // multitags for result data
}
